
CASE_SENSITIVE=false
DISABLE_AUTO_UPDATE=true
DISABLE_LS_COLORS=false
DISABLE_AUTO_TITLE=false
COMPLETION_WAITING_DOTS=true

export PATH="/usr/sbin:/sbin:$HOME/.cargo/bin/:$PATH"

zstyle ':completion:*' menu select
compctl -/ cd # type a directory's name to cd to it.
eval $(dircolors -b)


autoload -U promptinit
promptinit
autoload -U colors # add some color

setopt autopushd pushdminus pushdsilent pushdtohome
setopt autocd
setopt cdablevars
setopt interactivecomments
setopt nobanghist
# allows ‘>’ redirection to truncate existing files. Otherwise ‘>!’ or ‘>|’ must be used to truncate a file.
# setopt noclobber
setopt SH_WORD_SPLIT
setopt nohup
setopt extendedglob
setopt correct
setopt NO_RM_STAR_SILENT

# history stuff
setopt HIST_REDUCE_BLANKS
setopt HIST_IGNORE_SPACE
setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# vars used later on by zsh
export EDITOR="vim"
export BROWSER=firefox
export TERM=xterm-256color
export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST

# ohmyzsh !
export ZSH=$HOME/.oh-my-zsh

if [ -f $ZSH/custom/themes/custom.zsh-theme ]; then
    ZSH_THEME="custom"
else
    ZSH_THEME="avit"
fi

plugins=(git docker sudo systemd lxd archlinux cp dirhistory rsync extract rust screen dnf yum colored-man-pages archlinux)
source $ZSH/oh-my-zsh.sh
# systemd plug -> sc-cmd
# sudo plug -> ESC * 2

# user configuration omz
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

# allow approximate
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# tab completion for PID :D
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always

# cd not select parent dir.
zstyle ':completion:*:cd:*' ignore-parents parent pwd
zstyle ':completion:*:c:*' file-patterns "*(-/)" ignore-parents parent pwd

# key bindings
typeset -g -A key
bindkey '^?' backward-delete-char
bindkey '^[[1~' beginning-of-line
bindkey '^[[5~' up-line-or-history
bindkey '^[[3~' delete-char
bindkey '^[[4~' end-of-line
bindkey '^[[6~' down-line-or-history
bindkey '^[[A' up-line-or-search
bindkey '^[[D' backward-char
bindkey '^[[B' down-line-or-search
bindkey '^[[C' forward-char

# set up auto extension stuff
alias -s html=$BROWSER
alias -s org=$BROWSER
alias -s php=$BROWSER
alias -s com=$BROWSER
alias -s net=$BROWSER
alias -s png=$BROWSER
alias -s jpg=$BROWSER
alias -s gif=$BROWSER
alias -s svg=$BROWSER
alias -s mkv=vlc
alias -s mp4=vlc
alias -s avi=vlc
alias -s mp3=vlc
alias -s sxw=soffice
alias -s doc=soffice
alias -s gz=tar xzf
alias -s bz2=tar xjf
alias -s java=$EDITOR
alias -s txt=$EDITOR
alias -s PKGBUILD=$EDITOR
alias -s jar=java -jar
alias -s pdf=$BROWSER
alias -s py='py'

# utilities aliases
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias find_dups='find -L . ! -empty -type f -exec md5sum {} + | sort | uniq -w32 -dD'
alias psf='ps -e | grep -i'
alias psa='ps -uf --ppid 2 -p 2 --deselect'
alias ll='ls -lFh --group-directories-first --color=auto'
alias la='ls -Ah  --group-directories-first'
alias lla='ls -AlFh --group-directories-first'
alias l='ls -CFh  --group-directories-first'
alias cl='clear'
alias s='cd .. && ls -CFh --group-directories-first'
alias dudu='du -hd1 | sort -h'
alias rmte='find . -empty -type d && echo && find . -xtype l'
alias rmted='find . -empty -type d -delete -print && echo && find . -xtype l -delete -print'
alias x='exit'
alias sx='startx'
alias kbfr='setxkbmap fr'
alias kbus='setxkbmap us'
alias kbint='setxkbmap -rules evdev -model evdev -layout us -variant intl'
alias j='jobs'
alias m='make'
alias k='killall -I'
alias pend='echo mem | sudo tee /sys/power/state 1>/dev/null'
alias nate='sudo systemctl hibernate'
alias brid='sudo systemctl hybrid'
alias down='sudo poweroff'
alias boot='sudo reboot'
alias lsblk='lsblk -o name,mountpoint,fstype,label,size,fsavail,fsused,fsuse%,rota,uuid'
alias lgt='pkill KILL -U'
alias py='python3'
alias py3='python3'
alias py2='python2'
alias pl='perl -d -e 1'
alias jar='java -jar'
alias am='alsamixer'
alias tre='tree -C --dirsfirst'
alias rmcache='rm -rf ~/.cache/'
alias fuspaces='for f in *\ *; do mv "$f" "${f// /_}"; done '
alias viewtar='tar -tf'
alias myip='echo `curl -s ipinfo.io/ip`'
alias opened_ports='sudo lsof -i -n -P | grep LISTEN'
alias ip='ip -c'
alias yolo='git commit -m "$(curl -s https://whatthecommit.com/index.txt)"'
alias gitsubinit='git submodule update --init --remote --recursive'
alias gitsubcheck='git submodule update --recursive'
alias swayexport='export SWAYSOCK=/run/user/$(id -u)/sway-ipc.$(id -u).$(pgrep -x sway).sock'

## Packages managers

# dpkg
alias dbi='sudo dpkg -i'
alias dbr='sudo dpkg -r'

# apt
alias apu='sudo apt update'
alias appg='sudo apt upgrade'
alias apd='sudo apt dist-upgrade'
alias apugd='sudo apt update -y && sudo apt full-upgrade -y && sudo apt autoremove --purge -y'
alias api='sudo apt install'
alias apie='sudo apt install -t experimental'
alias apr='sudo apt autoremove --purge'
alias apcc='sudo apt clean && sudo apt autoclean'
alias apsearch='apt-cache search'
alias aps='apt search'
alias apse='apt-cache search -t experimental'
alias apshow='apt-cache showpkg'

# pikaur / aur
alias auri='pikaur -S --noedit'
alias aurr='pikaur -Rsu'
alias auru='pikaur -Syu --noedit'
alias aurs='pikaur -Ss'
alias aurl='echo "---- Native Packages ----" && pikaur -Qen && echo "---- Aur Packages ----" && pikaur -Qem'
# Get packages list sorted by declared size
alias aurls='pikaur -Qi | awk "/^Name/{name=\$3} /^Installed Size/{print \$4\$5, name}" | sort -h'
# Clean cache + orphan/unneeded packages
alias aurc='pikaur -Sccd --noconfirm ; pikaur -Qtdq | pikaur -Rns --noconfirm - 2>/dev/null ;:'

## Functions

# Quick file search
function finame(){
    find . -iname "*$1*"
}

# Move args to tmp (with copy conservation)
function del() {
    for file in "$@"; do mv --backup=t "$file" /var/tmp/; done
}

# Builtin cd "$*"
function c() {
    cd "$@"
    ls -CFh --group-directories-first
}

# Make your directories and files access rights sane.
function sanitize() { chmod -R u=rwX,g=rX,o= "$@"; }

# Mount utilities
function mnt() {
    mkdir -p $2
    sudo mount $1 $2
}

function mountntfs() {
    mkdir -p $2
    sudo mount -t ntfs -o uid=$UID,umask=22 $1 $2
}

# Gpg utilities
function crypt() { gpg -co "${1}.gpg" "$1"; }

function decrypt() {
    SUFFIX=".gpg"
    NEW_FILE=${1%$SUFFIX}
    gpg -do ${NEW_FILE} $1
}

# Git global config
function gitautoconfig() {
    delta -V &>/dev/null && git config --global core.pager delta || git config --unset --global core.pager
    git config --global pull.rebase false
    git config --global user.email Exocen@users.noreply.github.com
    git config --global user.name "Exocen"
    git config --global push.default simple
}

# Archive functions
function maketar() { tar cvzf $1.tgz $*; }

function makezip() { zip -r "${1%%/}.zip" "$1"; }
