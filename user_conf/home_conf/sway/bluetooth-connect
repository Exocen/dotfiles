#!/bin/bash
if [ "$#" -ge 2 ]; then
    echo "USAGE: script \"device_name\""
    exit 1
fi
# Lockfile sample (block multiple instances)
LOCKFILE="/var/run/user/$UID/$(basename "$0").lock"
[ -f "$LOCKFILE" ] && ps -p "$(cat "$LOCKFILE")" >/dev/null && echo "$(basename "$0") is already running." && notify-send "Bluetooth already trying to connect" -u critical -i audio-headset -t 5000 && exit 1 || echo $$ >"$LOCKFILE"

safe_exit() {
    echo "$1"
    rm "$LOCKFILE"
    exit "$2"
}

main() {
    TIMEOUT_DELAY="1 minute"
    TIMEOUT="$(date -d "$TIMEOUT_DELAY" +%s)"
    if [ "$#" -eq 1 ]; then
        DEVICE_NAME=$1
        DEVICE_MAC=$(bluetoothctl devices | grep -oP "(?<=\s)..:..:..:..:..:..(?=\s*$DEVICE_NAME\$)") || safe_exit "\"$DEVICE_NAME\" not paired" 1
    else
        if bluetoothctl devices | grep -i device &>/dev/null; then
            echo "No bluetooth device given, using first registered device on bluetoothctl"
            DEVICE_MAC=`bluetoothctl devices | head -n 1 | cut -d " " -f 2`
            DEVICE_NAME=`bluetoothctl devices | head -n 1 | cut -d " " -f 3-10`
        else
            safe_exit "Please register a device with bluetoothctl or give device_name as argument" 1
        fi
    fi

    notify-send "Bluetooth" "Connecting $DEVICE_NAME ..." -i audio-headset -r 200 -t 60000
    bluetoothctl power on 1>/dev/null
    wpctl settings --save bluetooth.autoswitch-to-headset-profile false
    while [ "$(date +%s)" -lt "$TIMEOUT" ]; do
        if bluetoothctl connect "$DEVICE_MAC" 1>/dev/null; then
            if ! pactl set-card-profile $(pactl list short | grep bluez_card | cut -f 1) a2dp-sink; then
                sleep 4
                pactl set-card-profile $(pactl list short | grep bluez_card | cut -f 1) a2dp-sink-aac
            fi
            if pactl set-card-profile $(pactl list short | grep bluez_card | cut -f 1) a2dp-sink; then
                notify-send "Bluetooth" "$DEVICE_NAME connected" -i audio-headset -r 200 -u low
                safe_exit "\"$DEVICE_NAME\" connected" 0
            fi
        else
            sleep 1
        fi
    done
    notify-send "Bluetooth" "$DEVICE_NAME connection timeout" -u critical -i audio-headset -r 200
    safe_exit "\"$DEVICE_NAME\" connection timeout" 1
}

main $*
